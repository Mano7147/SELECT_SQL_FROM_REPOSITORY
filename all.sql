-- Tables creation:

CREATE TABLE ADDRESS
(
	ID NUMBER NOT NULL PRIMARY KEY,
	NAME VARCHAR(50) NOT NULL
)

CREATE TABLE SALESMAN
(
	ID NUMBER NOT NULL PRIMARY KEY,
	FIO VARCHAR2(50) NOT NULL,
	ADDRESS NUMBER NOT NULL REFERENCES ADDRESS(ID),
	PHONE_NUMBER VARCHAR(50) NOT NULL
)

CREATE TABLE MEASURE_UNIT
(
	ID NUMBER NOT NULL PRIMARY KEY,
	NAME VARCHAR(50) NOT NULL
)

CREATE TABLE PRODUCT
(
	ID NUMBER NOT NULL PRIMARY KEY,
	NAME VARCHAR(50) NOT NULL, 
	PRICE NUMBER NOT NULL, 
	MEASURE_UNIT NUMBER NOT NULL REFERENCES MEASURE_UNIT(ID)
)

CREATE TABLE TRAVEL
(
	ID NUMBER NOT NULL PRIMARY KEY,
	TRAVELER NUMBER NOT NULL REFERENCES SALESMAN(ID),
	DATE_BEGIN DATE NOT NULL,
	DATE_END DATE NOT NULL
)

CREATE TABLE TAKEN
(
	ID NUMBER NOT NULL PRIMARY KEY,
	TRAVEL NUMBER NOT NULL REFERENCES TRAVEL(ID),
	PRODUCT NUMBER NOT NULL REFERENCES PRODUCT(ID),
	AMOUNT NUMBER NOT NULL
)

CREATE TABLE RETURNED
(
	ID NUMBER NOT NULL PRIMARY KEY,
	TRAVEL NUMBER NOT NULL REFERENCES TRAVEL(ID),
	PRODUCT NUMBER NOT NULL REFERENCES PRODUCT(ID),
	AMOUNT NUMBER NOT NULL
)

INSERT ALL
	INTO SALESMAN(ID,FIO,ADDRESS,PHONE_NUMBER) VALUES (1,'Matveev Andrey Olegovich', 1, '89538040577')
	INTO SALESMAN(ID,FIO,ADDRESS,PHONE_NUMBER) VALUES (2,'Demidiv Sergey Evgenievich', 2, '89538040577')
	INTO SALESMAN(ID,FIO,ADDRESS,PHONE_NUMBER) VALUES (3,'Amikishieva Ruslana Vagifovna', 3, '8953804057')
	INTO SALESMAN(ID,FIO,ADDRESS,PHONE_NUMBER) VALUES (4,'Dudaev Alexander Ruslanovich', 9, '89538040577')
	INTO SALESMAN(ID,FIO,ADDRESS,PHONE_NUMBER) VALUES (5,'Kambalina Alena Dmitrievna', 8, '89538040577')
	INTO SALESMAN(ID,FIO,ADDRESS,PHONE_NUMBER) VALUES (6,'Katchik Nikita Olegovich', 8, '89538040577')
	INTO SALESMAN(ID,FIO,ADDRESS,PHONE_NUMBER) VALUES (7,'Malafeev Vitaly Eduardovich', 7, '89538040577')
	INTO SALESMAN(ID,FIO,ADDRESS,PHONE_NUMBER) VALUES (8,'Ospanov Daulet Turlubekovich', 4, '89538040577')
	INTO SALESMAN(ID,FIO,ADDRESS,PHONE_NUMBER) VALUES (9,'Svistchev Alexey Nikolaevich', 3, '89996765843')
	INTO SALESMAN(ID,FIO,ADDRESS,PHONE_NUMBER) VALUES (10,'Hadzhiev Matvey Georgievich', 5, '89991234567')
	INTO SALESMAN(ID,FIO,ADDRESS,PHONE_NUMBER) VALUES (11,'Shachenko Nikita Vadimovich', 6, '89538040577')
SELECT * FROM DUAL;

INSERT ALL
	INTO MEASURE_UNIT(ID,NAME) VALUES (1,'Ton')
	INTO MEASURE_UNIT(ID,NAME) VALUES (2,'Gram')
	INTO MEASURE_UNIT(ID,NAME) VALUES (3,'Milligram')
	INTO MEASURE_UNIT(ID,NAME) VALUES (4,'Kilogram')
	INTO MEASURE_UNIT(ID,NAME) VALUES (5,'Ounce')
	INTO MEASURE_UNIT(ID,NAME) VALUES (6,'Pound')
	INTO MEASURE_UNIT(ID,NAME) VALUES (7,'Stone')
SELECT * FROM DUAL;

-- Insert new data to tables

INSERT ALL
	INTO TRAVEL(ID,TRAVELER,DATE_BEGIN,DATE_END) VALUES (1, 1,to_date('01.01.2001', 'dd.mm.yyyy'),to_date('02.02.2002', 'dd.mm.yyyy'))
	INTO TRAVEL(ID,TRAVELER,DATE_BEGIN,DATE_END) VALUES (2, 3,to_date('01.01.2002', 'dd.mm.yyyy'),to_date('02.02.2003', 'dd.mm.yyyy'))
	INTO TRAVEL(ID,TRAVELER,DATE_BEGIN,DATE_END) VALUES (3, 4,to_date('01.01.2011', 'dd.mm.yyyy'),to_date('02.02.2012', 'dd.mm.yyyy'))
	INTO TRAVEL(ID,TRAVELER,DATE_BEGIN,DATE_END) VALUES (4, 2,to_date('01.01.2041', 'dd.mm.yyyy'),to_date('02.02.2042', 'dd.mm.yyyy'))
	INTO TRAVEL(ID,TRAVELER,DATE_BEGIN,DATE_END) VALUES (5, 7,to_date('01.01.2031', 'dd.mm.yyyy'),to_date('02.02.2035', 'dd.mm.yyyy'))
	INTO TRAVEL(ID,TRAVELER,DATE_BEGIN,DATE_END) VALUES (6, 6,to_date('01.01.2013', 'dd.mm.yyyy'),to_date('02.02.2014', 'dd.mm.yyyy'))
	INTO TRAVEL(ID,TRAVELER,DATE_BEGIN,DATE_END) VALUES (7, 9,to_date('01.01.2001', 'dd.mm.yyyy'),to_date('02.02.2002', 'dd.mm.yyyy'))
	INTO TRAVEL(ID,TRAVELER,DATE_BEGIN,DATE_END) VALUES (8, 8,to_date('01.01.2001', 'dd.mm.yyyy'),to_date('02.02.2002', 'dd.mm.yyyy'))
	INTO TRAVEL(ID,TRAVELER,DATE_BEGIN,DATE_END) VALUES (9, 8,to_date('01.01.204', 'dd.mm.yyyy'),to_date('02.02.207', 'dd.mm.yyyy'))
	INTO TRAVEL(ID,TRAVELER,DATE_BEGIN,DATE_END) VALUES (10, 1,to_date('01.01.206', 'dd.mm.yyyy'),to_date('02.02.2002', 'dd.mm.yyyy'))
	INTO TRAVEL(ID,TRAVELER,DATE_BEGIN,DATE_END) VALUES (11, 2,to_date('01.01.1995', 'dd.mm.yyyy'),to_date('02.02.1999', 'dd.mm.yyyy'))
	INTO TRAVEL(ID,TRAVELER,DATE_BEGIN,DATE_END) VALUES (12, 1,to_date('01.01.2003', 'dd.mm.yyyy'),to_date('02.02.2003', 'dd.mm.yyyy'))
	INTO TRAVEL(ID,TRAVELER,DATE_BEGIN,DATE_END) VALUES (13, 2,to_date('01.01.2004', 'dd.mm.yyyy'),to_date('02.02.2005', 'dd.mm.yyyy'))
	INTO TRAVEL(ID,TRAVELER,DATE_BEGIN,DATE_END) VALUES (14, 3,to_date('01.01.2006', 'dd.mm.yyyy'),to_date('02.02.2007', 'dd.mm.yyyy'))
	INTO TRAVEL(ID,TRAVELER,DATE_BEGIN,DATE_END) VALUES (15, 5,to_date('01.01.2008', 'dd.mm.yyyy'),to_date('02.02.2009', 'dd.mm.yyyy'))
SELECT * FROM DUAL;

INSERT ALL
	INTO PRODUCT(ID,NAME,PRICE,MEASURE_UNIT) VALUES (1,'IPhone7',896,2)
	INTO PRODUCT(ID,NAME,PRICE,MEASURE_UNIT) VALUES (2,'Zubochistka',925,3)
	INTO PRODUCT(ID,NAME,PRICE,MEASURE_UNIT) VALUES (3,'MacBook',345,2)
	INTO PRODUCT(ID,NAME,PRICE,MEASURE_UNIT) VALUES (4,'Boots Rebook',502,4)
	INTO PRODUCT(ID,NAME,PRICE,MEASURE_UNIT) VALUES (5,'Big bag',431,2)
	INTO PRODUCT(ID,NAME,PRICE,MEASURE_UNIT) VALUES (6,'Keyboard',37,3)
	INTO PRODUCT(ID,NAME,PRICE,MEASURE_UNIT) VALUES (7,'Socks',69,7)
	INTO PRODUCT(ID,NAME,PRICE,MEASURE_UNIT) VALUES (8,'T-shirt',936,7)
	INTO PRODUCT(ID,NAME,PRICE,MEASURE_UNIT) VALUES (9,'Shampoo',436,4)
	INTO PRODUCT(ID,NAME,PRICE,MEASURE_UNIT) VALUES (10,'Food',746,3)
SELECT * FROM DUAL;

INSERT ALL
	INTO ADDRESS(ID,NAME) VALUES (1, 'Moskow')
	INTO ADDRESS(ID,NAME) VALUES (2,'Novosibirsk')
	INTO ADDRESS(ID,NAME) VALUES (3,'St. Petersburg')
	INTO ADDRESS(ID,NAME) VALUES (4,'Kaliningrad')
	INTO ADDRESS(ID,NAME) VALUES (5,'Kemerovo')
	INTO ADDRESS(ID,NAME) VALUES (6,'Komarovo')
	INTO ADDRESS(ID,NAME) VALUES (7,'Penza')
	INTO ADDRESS(ID,NAME) VALUES (8,'Ekaterinburg')
	INTO ADDRESS(ID,NAME) VALUES (9,'Barnaul')
SELECT * FROM DUAL;

INSERT ALL
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (1,1,1,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (2,2,2,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (3,3,3,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (4,4,4,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (5,5,5,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (6,6,6,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (7,7,7,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (8,8,8,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (9,9,9,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (10,10,10,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (11,11,1,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (12,12,2,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (13,13,3,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (14,14,4,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (15,15,5,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (16,1,6,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (17,2,7,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (18,3,8,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (19,4,9,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (20,5,10,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (21,6,1,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (22,7,2,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (23,8,3,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (24,9,4,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (25,10,5,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (26,11,6,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (27,12,7,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (28,13,8,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (29,14,9,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (30,15,10,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (31,1,1,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (32,2,2,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (33,3,3,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (34,4,4,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (35,5,5,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (36,6,6,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (37,7,7,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (38,8,8,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (39,9,9,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (40,10,10,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (41,11,1,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (42,12,2,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (43,13,3,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (44,14,4,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (45,15,5,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (46,1,6,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (47,2,7,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (48,3,8,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (49,4,9,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (50,5,10,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (51,6,1,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (52,7,2,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (53,8,3,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (54,9,4,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (55,10,5,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (56,11,6,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (57,12,7,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (58,13,8,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (59,14,9,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (60,15,10,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (61,1,1,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (62,2,2,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (63,3,3,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (64,4,4,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (65,5,5,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (66,6,6,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (67,7,7,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (68,8,8,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (69,9,9,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (70,10,10,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (71,11,1,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (72,12,2,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (73,13,3,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (74,14,4,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (75,15,5,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (76,1,6,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (77,2,7,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (78,3,8,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (79,4,9,100)
	INTO TAKEN(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (80,5,10,100)
SELECT * FROM DUAL

INSERT ALL 
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (1,1,1,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (2,2,2,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (3,3,3,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (4,4,4,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (5,5,5,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (6,6,6,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (7,7,7,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (8,8,8,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (9,9,9,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (10,10,10,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (11,11,1,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (12,12,2,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (13,13,3,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (14,14,4,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (15,15,5,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (16,1,6,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (17,2,7,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (18,3,8,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (19,4,9,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (20,5,10,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (21,6,1,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (22,7,2,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (23,8,3,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (24,9,4,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (25,10,5,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (26,11,6,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (27,12,7,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (28,13,8,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (29,14,9,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (30,15,10,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (31,1,1,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (32,2,2,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (33,3,3,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (34,4,4,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (35,5,5,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (36,6,6,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (37,7,7,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (38,8,8,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (39,9,9,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (40,10,10,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (41,11,1,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (42,12,2,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (43,13,3,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (44,14,4,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (45,15,5,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (46,1,6,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (47,2,7,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (48,3,8,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (49,4,9,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (50,5,10,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (51,6,1,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (52,7,2,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (53,8,3,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (54,9,4,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (55,10,5,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (56,11,6,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (57,12,7,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (58,13,8,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (59,14,9,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (60,15,10,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (61,1,1,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (62,2,2,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (63,3,3,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (64,4,4,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (65,5,5,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (66,6,6,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (67,7,7,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (68,8,8,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (69,9,9,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (70,10,10,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (71,11,1,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (72,12,2,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (73,13,3,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (74,14,4,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (75,15,5,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (76,1,6,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (77,2,7,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (78,3,8,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (79,4,9,50)
	INTO RETURNED(ID,TRAVEL,PRODUCT,AMOUNT) VALUES (80,5,10,50)
SELECT * FROM DUAL

-- So good realisaton: 

SELECT DISTINCT FIO, (30 / 100) * (SUM(T.AMOUNT * P1.PRICE) - SUM(R.AMOUNT * P2.PRICE))
FROM SALESMAN S
INNER JOIN TRAVEL TR
	ON TR.TRAVELER = S.ID
INNER JOIN TAKEN T
	ON T.TRAVEL = TR.ID
INNER JOIN PRODUCT P1
	ON P1.ID = T.PRODUCT
LEFT JOIN RETURNED R
	ON R.TRAVEL = TR.ID
INNER JOIN PRODUCT P2
	ON P2.ID = R.PRODUCT
GROUP BY FIO

SELECT DISTINCT FIO, SUM(T.AMOUNT) / SUM(R.AMOUNT)
FROM SALESMAN S
INNER JOIN TRAVEL TR
	ON TR.TRAVELER = S.ID
INNER JOIN TAKEN T
	ON T.TRAVEL = TR.ID
INNER JOIN PRODUCT P1
	ON P1.ID = T.PRODUCT
LEFT JOIN RETURNED R
	ON R.TRAVEL = TR.ID
INNER JOIN PRODUCT P2
	ON P2.ID = R.PRODUCT
GROUP BY FIO

SELECT * 
FROM
( 
	SELECT FIO, EFFICIENCY, COUNT(TR1.ID) AS TRAVELS
	FROM
	(
		SELECT DISTINCT S.ID AS SALID, S.FIO AS FIO, SUM(T.AMOUNT) / SUM(R.AMOUNT) AS EFFICIENCY
		FROM SALESMAN S
		INNER JOIN TRAVEL TR
			ON TR.TRAVELER = S.ID
		INNER JOIN TAKEN T
			ON T.TRAVEL = TR.ID
		INNER JOIN PRODUCT P1
			ON P1.ID = T.PRODUCT
		LEFT JOIN RETURNED R
			ON R.TRAVEL = TR.ID
		INNER JOIN PRODUCT P2
			ON P2.ID = R.PRODUCT
		GROUP BY S.ID, S.FIO
	)
	INNER JOIN TRAVEL TR1
		ON TR1.TRAVELER = SALID
	GROUP BY FIO, EFFICIENCY
	ORDER BY EFFICIENCY DESC
)
WHERE ROWNUM <= 1

-- Not so good realisation: 

SELECT T3.NAME, (30 / 100) * (T3.SUM_TAKEN - T3.SUM_RETURNED)
FROM
(
	SELECT T1.NAME AS NAME, T1.SUMMA AS SUM_TAKEN, COALESCE(T2.SUMMA, 0) AS SUM_RETURNED
	FROM
	(
		SELECT 
		SALESMAN.ID AS SID, SALESMAN.FIO AS NAME, SUM(TAKEN.AMOUNT * PRODUCT.PRICE) AS SUMMA
		FROM 
			TAKEN, PRODUCT, SALESMAN
		WHERE
			TAKEN.PRODUCT = PRODUCT.ID
		AND
			TAKEN.TRAVEL IN
			(
				SELECT ID FROM TRAVEL
				WHERE TRAVELER = SALESMAN.ID
			)
		GROUP BY 
			SALESMAN.ID, SALESMAN.FIO
	) T1
	INNER JOIN
	(
		SELECT 
			SALESMAN.ID AS SID, SUM(RETURNED.AMOUNT * PRODUCT.PRICE) AS SUMMA
		FROM 
			RETURNED, PRODUCT, SALESMAN
		WHERE
			RETURNED.PRODUCT = PRODUCT.ID
		AND
			RETURNED.TRAVEL IN
			(
				SELECT ID FROM TRAVEL
				WHERE TRAVELER = SALESMAN.ID
			)
		GROUP BY 
			SALESMAN.ID
	) T2
	ON 
		T1.SID = T2.SID
) T3

SELECT T3.NAME, T3.SUM_TAKEN / T3.SUM_RETURNED AS EFFICIENCY
FROM
(
	SELECT T1.NAME AS NAME, T1.SUMMA AS SUM_TAKEN, COALESCE(T2.SUMMA, 0) AS SUM_RETURNED
	FROM
	(
		SELECT 
		SALESMAN.ID AS SID, SALESMAN.FIO AS NAME, SUM(TAKEN.AMOUNT * PRODUCT.PRICE) AS SUMMA
		FROM 
			TAKEN, PRODUCT, SALESMAN
		WHERE
			TAKEN.PRODUCT = PRODUCT.ID
		AND
			TAKEN.TRAVEL IN
			(
				SELECT ID FROM TRAVEL
				WHERE TRAVELER = SALESMAN.ID
			)
		GROUP BY 
			SALESMAN.ID, SALESMAN.FIO
	) T1
	INNER JOIN
	(
		SELECT 
			SALESMAN.ID AS SID, SUM(RETURNED.AMOUNT * PRODUCT.PRICE) AS SUMMA
		FROM 
			RETURNED, PRODUCT, SALESMAN
		WHERE
			RETURNED.PRODUCT = PRODUCT.ID
		AND
			RETURNED.TRAVEL IN
			(
				SELECT ID FROM TRAVEL
				WHERE TRAVELER = SALESMAN.ID
			)
		GROUP BY 
			SALESMAN.ID
	) T2
	ON 
		T1.SID = T2.SID
) T3

SELECT * FROM 
(
	SELECT * FROM
	(
		SELECT T4.NAME AS NAME, T4.EFFICIENCY AS EFFICIENCY, COALESCE(T5.COUNT_TRAVELS, 0) AS COUNT_TRAVELS
		FROM 
		(
			SELECT T3.SID AS SID, T3.NAME AS NAME, T3.SUM_TAKEN / T3.SUM_RETURNED AS EFFICIENCY
			FROM
			(
				SELECT 
					T1.SID AS SID, T1.NAME AS NAME, T1.SUMMA AS SUM_TAKEN, COALESCE(T2.SUMMA, 0) AS SUM_RETURNED
				FROM
				(
					SELECT 
					SALESMAN.ID AS SID, SALESMAN.FIO AS NAME, SUM(TAKEN.AMOUNT * PRODUCT.PRICE) AS SUMMA
					FROM 
						TAKEN, PRODUCT, SALESMAN
					WHERE
						TAKEN.PRODUCT = PRODUCT.ID
					AND
						TAKEN.TRAVEL IN
						(
							SELECT ID FROM TRAVEL
							WHERE TRAVELER = SALESMAN.ID
						)
					GROUP BY 
						SALESMAN.ID, SALESMAN.FIO
				) T1
				INNER JOIN
				(
					SELECT 
						SALESMAN.ID AS SID, SUM(RETURNED.AMOUNT * PRODUCT.PRICE) AS SUMMA
					FROM 
						RETURNED, PRODUCT, SALESMAN
					WHERE
						RETURNED.PRODUCT = PRODUCT.ID
					AND
						RETURNED.TRAVEL IN
						(
							SELECT ID FROM TRAVEL
							WHERE TRAVELER = SALESMAN.ID
						)
					GROUP BY 
						SALESMAN.ID
				) T2
				ON 
					T1.SID = T2.SID
			) T3
		) T4
		INNER JOIN
		(
			SELECT 
				SALESMAN.ID AS SID, COUNT(TRAVEL.ID) AS COUNT_TRAVELS
			FROM
				SALESMAN, TRAVEL
			WHERE
				TRAVEL.TRAVELER = SALESMAN.ID
			GROUP BY 
				SALESMAN.ID
		) T5
		ON 
			T5.SID = T4.SID
	) T6
	ORDER BY T6.EFFICIENCY DESC 
)
WHERE ROWNUM <= 1





































